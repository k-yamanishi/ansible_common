---
- name: Install open-jdk
  yum: name="java-{{ JAVA_VERSION }}-openjdk-devel" state=present

- group: name=glassfish
- user: name=glassfish group=glassfish

- name: Download glassfish
  stat: path=/vagrant/glassfish-{{ GLASSFISH_VERSION }}.zip
  register: glassfish_zip_archive

- get_url:
    url="http://download.java.net/glassfish/{{ GLASSFISH_VERSION }}/release/glassfish-{{ GLASSFISH_VERSION }}.zip"
    dest=/vagrant
  when: not glassfish_zip_archive.stat.exists

- name: Unarchive glassfish
  unarchive:
    src=/vagrant/glassfish-{{ GLASSFISH_VERSION }}.zip
    dest=/opt
    force=yes
    copy=no

- name: Change owner of /opt/glassfish4 glassfish:glassfish
  file:
    path=/opt/glassfish4 state=directory
    owner=glassfish group=glassfish
    recurse=yes

- name: Install systemd config for glassfish
  copy: src=systemd_glassfish dest=/usr/lib/systemd/system/glassfish.service mode=0644

- name: glassfish service setup
  service:
    name=glassfish
    state=started
    enabled=yes

- name: set admin password
  expect:
    command: "/opt/glassfish4/bin/asadmin change-admin-password --user admin"
    responses:
      'Enter the admin password>': ""
      'Enter the new admin password>': "{{ ADMIN_PASSWORD }}"
      'Enter the new admin password again>': "{{ ADMIN_PASSWORD }}"

- name: set management console user
  expect:
    command: "/opt/glassfish4/bin/asadmin login"
    responses:
      # These response messages is regex. So, we must escape [ and ]
      # if these are not control characters of regex.
      "Enter admin user name \\[Enter to accept default\\]> ": "admin"
      "Enter admin password> ": "{{ ADMIN_PASSWORD }}"

- name: make management console ssl
  command: "/opt/glassfish4/bin/asadmin enable-secure-admin"

- name: create glassfish jms
  command: >
    /opt/glassfish4/bin/asadmin create-jms-resource
    --restype javax.jms.Queue
    --property Name=myQueuePhysicalDestination
    jms/myQueue
  register: queue

- debug: var=queue.stdout_lines

- name: create glassfish jms connection factory
  command: >
    /opt/glassfish4/bin/asadmin create-jms-resource
    --restype javax.jms.QueueConnectionFactory
    jms/myQueueConnectionFactory
  register: queueConFactory

- debug: var=queueConFactory.stdout_lines

- include: tasks/postgis.yml
  when: db in ['postgis']

- include: tasks/postgresql.yml
  when: db in ['postgresql', 'postgis']
